using System.Collections.Generic;
using System.Linq;
using System.Security.Cryptography.X509Certificates;

namespace CodeFirstApi.Generator;

internal static class CodeFirstApiGenerator_HttpClientApi
{
    internal static IEnumerable<(string text, string path)> Generate(OneWayAppInfo info)
    {
        var namespaces = new []
            {
                "System",
                "System.Collections.Generic",
                "System.Threading.Tasks",
                "System.Buffers",
                "System.IO",
                "System.Text.Json",
                "System.Net.Http",
                "System.Net.Http.Json",
                "Microsoft.AspNetCore.Components"
            }
            .Where(o=>!string.IsNullOrEmpty(o))
            .Concat(info.NamespacesToInclude)
            .Distinct();
        
        var sb = new IndentedStringBuilder();
        sb.AppendLine("// <auto-generated/>");
        sb.AppendLine("#nullable enable");
        sb.AppendLine("");
        sb.AppendLines(namespaces.Select(o => $"using {o};"));
        sb.AppendLine($"namespace {info.app.Namespace}");
        using (sb.IndentWithCurlyBrackets())
        {
            sb.AppendLine();
            sb.AppendLine($"public partial class {info.app.TypeNameWithoutIPrefix}_Client : {info.app.FullName}");
            using (sb.IndentWithCurlyBrackets())
            {
                sb.AppendLine($"private readonly IHttpClientFactory _httpClientFactory;");
                sb.AppendLine($"private readonly PersistentComponentState _applicationState;");

                sb.AppendLine();
                sb.AppendLine($"public {info.app.TypeNameWithoutIPrefix}_Client(IHttpClientFactory httpClientFactory, PersistentComponentState applicationState)");
                using (sb.IndentWithCurlyBrackets())
                {
                    sb.AppendLine("_httpClientFactory = httpClientFactory;");
                    sb.AppendLine("_applicationState = applicationState;");
                }
                
                foreach (var (m, i) in info.methods.EnumerateWithIndex())
                {
                    sb.AppendLine($"public async ValueTask{(m.returnType == null ? "" : $"<{m.returnType.FullName}>")} {m.name}({string.Join(", ", m.arguments.Select(a => $"{a.argType.FullName} {a.argName}"))})");

                    var methodPersistence = m.returnType != null && m.persistForPrerendering;
                    using (sb.IndentWithCurlyBrackets())
                    {
                        string? argCsharp = null;
                        if (m.arguments.Length == 0)
                        {
                            argCsharp = null;
                        }
                        else if (m.arguments.Length == 1)
                        {
                            argCsharp = m.arguments[0].argName;
                        }
                        else
                        {
                            argCsharp = $"new {{ {m.arguments.Select(a=>$"{a.argName}").JoinStringWithComma()} }}";
                        }
                        
                        if (methodPersistence)
                        {
                            if (argCsharp != null)
                            {
                                sb.AppendLine($"var persistenceKey=$\"{m.name}_{{JsonSerializer.Serialize({argCsharp})}}\";");
                            }
                            else
                            {
                                sb.AppendLine($"var persistenceKey=$\"{m.name}\";");
                            }
                            sb.AppendLine($"if (_applicationState.TryTakeFromJson<{m.returnType.FullName}>(persistenceKey, out var __restoredValue))");
                            using (sb.IndentWithCurlyBrackets())
                            {
                                sb.AppendLine("return __restoredValue;");
                            }
                        }


                        sb.AppendLine($"var httpClient = _httpClientFactory.CreateClient(\"GeneratedClients\");");

                        if (argCsharp == null)
                        {
                            sb.AppendLine($"var httpResponse = await httpClient.PostAsync(\"/api/{info.app.TypeNameWithoutIPrefix}/{m.name}\",null);");
                        }
                        else
                        {
                            sb.AppendLine($"var httpResponse = await httpClient.PostAsJsonAsync(\"/api/{info.app.TypeNameWithoutIPrefix}/{m.name}\",{argCsharp});");
                        }
                        
                        sb.AppendLine($"httpResponse.EnsureSuccessStatusCode();");
                        
                        if (m.returnType == null)
                        {
                            sb.AppendLine($"return;");
                        }
                        else
                        {
                            sb.AppendLine($"var response = await httpResponse.Content.ReadFromJsonAsync<{m.returnType.FullName}>();");
                            sb.AppendLine($"return response;");
                        }
                    }
                }
                
            }
        }

        yield return ($"{info.app.TypeNameWithoutIPrefix}_Client.g.cs", sb.ToString());
    }

    internal static IEnumerable<(string text, string path)> GenerateServicesMethod(IEnumerable<OneWayAppInfo> infos)
    {
        var namespaces = new []
            {
                "System",
                "System.Collections.Generic",
                "System.Threading.Tasks",
                "System.Buffers",
                "System.IO",
                "System.Text.Json",
                "System.Net.Http",
                "System.Net.Http.Json"
            }
            .Concat(infos.SelectMany(o=>o.NamespacesToInclude))
            .Distinct();
        
        var sb = new IndentedStringBuilder();
        sb.AppendLine("// <auto-generated/>");
        sb.AppendLine("#nullable enable");
        sb.AppendLine("");
        sb.AppendLines(namespaces.Select(o => $"using {o};"));
 
            sb.AppendLine();
            sb.AppendLine($"internal static class GeneratedClientExtensions ");
            using (sb.IndentWithCurlyBrackets())
            {
                sb.AppendLine($"public static void AddGeneratedClients(this IServiceCollection services)");
                using (sb.IndentWithCurlyBrackets())
                {
                    foreach (var info in infos)
                    {
                        sb.AppendLine($"services.AddScoped<{info.app.FullName},{info.app.TypeNameWithoutIPrefix}_Client>();");
                    }
                }
            }
        

        yield return ($"GeneratedClientExtensions.g.cs", sb.ToString());
    }
}